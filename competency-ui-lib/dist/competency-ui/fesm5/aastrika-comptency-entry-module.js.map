{"version":3,"file":"aastrika-comptency-entry-module.js","sources":["ng://@aastrika/comptency/entry-module/components/slef-assessment-entry/slef-assessment-entry.component.ts","ng://@aastrika/comptency/entry-module/components/competency-entry/competency-entry.component.ts","ng://@aastrika/comptency/entry-module/services/configuration-context.ts","ng://@aastrika/comptency/entry-module/services/config.service.ts","ng://@aastrika/comptency/entry-module/entry-module.ts","ng://@aastrika/comptency/entry-module/aastrika-comptency-entry-module.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'lib-slef-assessment-entry',\r\n  templateUrl: './slef-assessment-entry.component.html',\r\n  styleUrls: ['./slef-assessment-entry.component.scss']\r\n})\r\nexport class SlefAssessmentEntryComponent implements OnInit {\r\n  @Output() stateChange: EventEmitter<any> = new EventEmitter();\r\n  constructor(public router:Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  navigateTo(){\r\n    this.stateChange.emit({'navigation':true})\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-competency-entry',\r\n  templateUrl: './competency-entry.component.html',\r\n  styleUrls: ['./competency-entry.component.scss']\r\n})\r\nexport class CompetencyEntryComponent implements OnInit {\r\n  @Output() stateChange: EventEmitter<any> = new EventEmitter();\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  navigateTo(){\r\n    this.stateChange.emit({'navigation':true})\r\n  }\r\n\r\n}\r\n","export class ConfigurationContext {\r\n    config:any\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Subject,BehaviorSubject } from 'rxjs';\r\nimport { ConfigurationContext } from './configuration-context';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n  public config$: Subject<any> = new BehaviorSubject<any>({});\r\n  private _config = this.config$.asObservable()\r\n  constructor(@Optional() context: ConfigurationContext, ) { \r\n    if(context){\r\n      console.log('context log in config service ------ ', context)\r\n      this.setConfig(context)\r\n    }\r\n  }\r\n  public setConfig(context) {\r\n    this.config$.next(context)\r\n  }\r\n  public getConfig(){\r\n    let config :any \r\n    this._config.subscribe((res:any)=>{\r\n      config =  res\r\n    })\r\n    return config\r\n  }\r\n \r\n}\r\n","import { NgModule ,ModuleWithProviders} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SlefAssessmentEntryComponent } from './components/slef-assessment-entry/slef-assessment-entry.component';\r\nimport { CompetencyEntryComponent } from './components/competency-entry/competency-entry.component';\r\nimport { MatIconModule } from '@angular/material';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ConfigurationContext } from './services/configuration-context';\r\n@NgModule({\r\n  declarations: [SlefAssessmentEntryComponent, CompetencyEntryComponent,],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatIconModule,\r\n  ],\r\n  exports: [\r\n    SlefAssessmentEntryComponent,\r\n    CompetencyEntryComponent,\r\n  ],\r\n  providers:[]\r\n})\r\nexport class EntryModule { \r\n  /**\r\n * Take the config from consuming apps\r\n *\r\n * @author Aman Kumar Sharma <amankumar.sharma@tarento.com>\r\n */\r\n  static forRoot(configContext: ConfigurationContext): ModuleWithProviders {\r\n    console.log(`Preparing to handle configuration context.`);\r\n    console.log('config data ------',configContext.config)\r\n    return {\r\n      ngModule: EntryModule,\r\n      providers: [\r\n        {provide: ConfigurationContext, useValue: configContext.config}\r\n      ]\r\n    }\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ConfigurationContext as Éµa} from './services/configuration-context';"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":";;;;;;;;IASE,sCAAmB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;QADtB,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;KACzB;IAErC,+CAAQ,GAAR;KACC;IAED,iDAAU,GAAV;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,YAAY,EAAC,IAAI,EAAC,CAAC,CAAA;KAC3C;;gBAPyB,MAAM;;IADtBA;QAAT,MAAM,EAAE;qEAAqD;IADnD,4BAA4B;QALxC,SAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,iHAAqD;;SAEtD,CAAC;OACW,4BAA4B,CAWxC;IAAD,mCAAC;CAXD;;;ICEE;QADU,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;KAC7C;IAEjB,2CAAQ,GAAR;KACC;IAED,6CAAU,GAAV;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,YAAY,EAAC,IAAI,EAAC,CAAC,CAAA;KAC3C;IARSA;QAAT,MAAM,EAAE;iEAAqD;IADnD,wBAAwB;QALpC,SAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,sHAAgD;;SAEjD,CAAC;OACW,wBAAwB,CAWpC;IAAD,+BAAC;CAXD;;;ICPA;KAEC;IAAD,2BAAC;CAAA;;;ICOC,uBAAwB,OAA6B;QAF9C,YAAO,GAAiB,IAAI,eAAe,CAAM,EAAE,CAAC,CAAC;QACpD,YAAO,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAA;QAE3C,IAAG,OAAO,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,OAAO,CAAC,CAAA;YAC7D,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;SACxB;KACF;IACM,iCAAS,GAAhB,UAAiB,OAAO;QACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KAC3B;IACM,iCAAS,GAAhB;QACE,IAAI,MAAW,CAAA;QACf,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,UAAC,GAAO;YAC7B,MAAM,GAAI,GAAG,CAAA;SACd,CAAC,CAAA;QACF,OAAO,MAAM,CAAA;KACd;;gBAfgC,oBAAoB,uBAAxC,QAAQ;;;IAHV,aAAa;QAHzB,UAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;QAIaC,WAAA,QAAQ,EAAE,CAAA;OAHZ,aAAa,CAoBzB;wBA1BD;CAMA;;;ICcA;KAgBC;oBAhBY,WAAW;;;;;;IAMf,mBAAO,GAAd,UAAe,aAAmC;QAChD,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAC,aAAa,CAAC,MAAM,CAAC,CAAA;QACtD,OAAO;YACL,QAAQ,EAAE,aAAW;YACrB,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,aAAa,CAAC,MAAM,EAAC;aAChE;SACF,CAAA;KACF;;IAfU,WAAW;QAbvB,QAAQ,CAAC;YACR,YAAY,EAAE,CAAC,4BAA4B,EAAE,wBAAwB,EAAE;YACvE,OAAO,EAAE;gBACP,YAAY;gBACZ,YAAY;gBACZ,aAAa;aACd;YACD,OAAO,EAAE;gBACP,4BAA4B;gBAC5B,wBAAwB;aACzB;YACD,SAAS,EAAC,EAAE;SACb,CAAC;OACW,WAAW,CAgBvB;IAAD,kBAAC;CAhBD;;ACpBA;;GAEG;;;;"}