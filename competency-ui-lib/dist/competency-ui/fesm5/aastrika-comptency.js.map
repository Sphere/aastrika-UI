{"version":3,"file":"aastrika-comptency.js","sources":["ng://@aastrika/comptency/entry-module/components/slef-assessment-entry/slef-assessment-entry.component.ts","ng://@aastrika/comptency/entry-module/components/competency-entry/competency-entry.component.ts","ng://@aastrika/comptency/entry-module/services/configuration-context.ts","ng://@aastrika/comptency/entry-module/entry-module.ts","ng://@aastrika/comptency/self-assessment/components/self-assessment-card/self-assessment-card.component.ts","ng://@aastrika/comptency/self-assessment/components/self-assessment/self-assessment.component.ts","ng://@aastrika/comptency/self-assessment/self-assessment.module.ts","ng://@aastrika/comptency/competency/services/request-util.ts","ng://@aastrika/comptency/competency/services/required-competency.service.ts","ng://@aastrika/comptency/competency/components/required-comptency-card/required-comptency-card.component.ts","ng://@aastrika/comptency/competency/services/gained.service.ts","ng://@aastrika/comptency/competency/components/gained-comptency-card/gained-comptency-card.component.ts","ng://@aastrika/comptency/competency/components/competency-dashboard/competency-dashboard.component.ts","ng://@aastrika/comptency/competency/services/active-summary.service.ts","ng://@aastrika/comptency/competency/components/active-summary/active-summary.component.ts","ng://@aastrika/comptency/competency/competency.module.ts","ng://@aastrika/comptency/public-api.ts","ng://@aastrika/comptency/aastrika-comptency.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'lib-slef-assessment-entry',\r\n  templateUrl: './slef-assessment-entry.component.html',\r\n  styleUrls: ['./slef-assessment-entry.component.scss']\r\n})\r\nexport class SlefAssessmentEntryComponent implements OnInit {\r\n  @Output() stateChange: EventEmitter<any> = new EventEmitter();\r\n  constructor(public router:Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  navigateTo(){\r\n    this.stateChange.emit({'navigation':true})\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-competency-entry',\r\n  templateUrl: './competency-entry.component.html',\r\n  styleUrls: ['./competency-entry.component.scss']\r\n})\r\nexport class CompetencyEntryComponent implements OnInit {\r\n  @Output() stateChange: EventEmitter<any> = new EventEmitter();\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  navigateTo(){\r\n    this.stateChange.emit({'navigation':true})\r\n  }\r\n\r\n}\r\n","export class ConfigurationContext {\r\n    config:any\r\n}\r\n","import { NgModule ,ModuleWithProviders} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SlefAssessmentEntryComponent } from './components/slef-assessment-entry/slef-assessment-entry.component';\r\nimport { CompetencyEntryComponent } from './components/competency-entry/competency-entry.component';\r\nimport { MatIconModule } from '@angular/material';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ConfigurationContext } from './services/configuration-context';\r\n@NgModule({\r\n  declarations: [SlefAssessmentEntryComponent, CompetencyEntryComponent,],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatIconModule,\r\n  ],\r\n  exports: [\r\n    SlefAssessmentEntryComponent,\r\n    CompetencyEntryComponent,\r\n  ],\r\n  providers:[]\r\n})\r\nexport class EntryModule { \r\n  /**\r\n * Take the config from consuming apps\r\n *\r\n * @author Aman Kumar Sharma <amankumar.sharma@tarento.com>\r\n */\r\n  static forRoot(configContext: ConfigurationContext): ModuleWithProviders {\r\n    console.log(`Preparing to handle configuration context.`);\r\n    console.log('config data ------',configContext.config)\r\n    return {\r\n      ngModule: EntryModule,\r\n      providers: [\r\n        {provide: ConfigurationContext, useValue: configContext.config}\r\n      ]\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-self-assessment-card',\r\n  templateUrl: './self-assessment-card.component.html',\r\n  styleUrls: ['./self-assessment-card.component.scss']\r\n})\r\nexport class SelfAssessmentCardComponent implements OnInit {\r\n\r\n  @Input() cardData: any\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common'\r\n\r\n@Component({\r\n  selector: 'lib-self-assessment',\r\n  templateUrl: './self-assessment.component.html',\r\n  styleUrls: ['./self-assessment.component.scss']\r\n})\r\nexport class SelfAssessmentComponent implements OnInit {\r\n\r\n  gainedproficencyData = [\r\n    {\r\n      title: 'Sector Meetings',\r\n      description: 'Documents and discuss HCM, THR, growth monitoring and referral related issues in sector meetings',\r\n      \r\n    },\r\n    {\r\n      title: 'Counselling ',\r\n      description: 'Lorem ipsum dolor sit amet, consectetur',\r\n      \r\n    }\r\n  ]\r\n\r\n  constructor(\r\n    private location: Location\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  navigateBack() {\r\n    this.location.back()\r\n  }\r\n\r\n}\r\n","import { NgModule  } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SelfAssessmentCardComponent } from './components/self-assessment-card/self-assessment-card.component';\r\nimport { SelfAssessmentComponent } from './components/self-assessment/self-assessment.component';\r\nimport { MatIconModule } from '@angular/material';\r\n\r\n\r\n@NgModule({\r\n  declarations: [SelfAssessmentCardComponent, SelfAssessmentComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n  ],\r\n  exports:[SelfAssessmentCardComponent, SelfAssessmentComponent]\r\n})\r\nexport class SelfAssessmentModule { }\r\n","import * as _ from 'lodash';\r\nexport class RequestUtil {\r\n  formatedActivities = (data: any) => {\r\n    if (!_.isEmpty(data)) {\r\n      return data\r\n    }\r\n\r\n  }\r\n  formatedActivitityByPostion = (data: any) => {\r\n    if (_.get(data, 'result')) {\r\n      const children = _.get(data, 'result.response').children\r\n      if (children.length > 0) {\r\n        const result = _.reduce(children, (result, value) => {\r\n          result.push({\r\n            'roles': _.get(value, 'name'),\r\n            'id': _.get(value, 'id'),\r\n            'description': _.get(value, 'description'),\r\n          })\r\n          return result\r\n        }, [])\r\n        return result\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  formatedActivitityByRoleId = (data: any) => {\r\n    if (_.get(data, 'result')) {\r\n      const children = _.get(data, 'result.response').children\r\n      if (children.length > 0) {\r\n        const result = _.reduce(children, (result, value) => {\r\n          result.push({\r\n            'title': _.get(value, 'name'),\r\n            'cid': _.get(value, 'id'),\r\n            'description': _.get(value, 'description')\r\n          })\r\n          return result\r\n        },[])\r\n        return result\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  formatedCompetency = (data: any) => {\r\n    let result = []\r\n    _.forEach(data,(data:any)=>{\r\n      if (_.get(data, 'result')) {\r\n        const children = _.get(data, 'result.response').children\r\n        if (children.length > 0) {\r\n          _.forEach(children, (value:any)=>{\r\n            result.push({\r\n              'competency': _.get(value, 'name'),\r\n              'id': _.get(value, 'id'),\r\n              'description': _.get(value, 'description'),\r\n              'levels': ['Level 4', 'Level 5'],\r\n              'cid': _.get(data, 'result.response').id\r\n            })\r\n          })\r\n        }\r\n      }\r\n    })\r\n    return result\r\n  }\r\n\r\n  /**\r\n * util method to formate the gained competency  \r\n * for user \r\n */\r\n\r\n  formatedGainedCompetency(entity:any, passbook:any){\r\n    let response = []\r\n    _.forEach(entity,(value:any)=>{\r\n        const cid =   _.get(value, 'id')\r\n        _.forEach(passbook,(passbookValue:any)=>{\r\n           if(passbookValue.competencies.hasOwnProperty(cid)){\r\n              const competency =  passbookValue.competencies[cid]\r\n              response.push({\r\n                'title': _.get(competency,'additionalParams.competencyName'),\r\n                'logs': this.acquiredPassbookLogs(_.get(competency, 'acquiredDetails')),\r\n                'proficiencyLevels': this.acauiredChannelColourCode(_.get(competency, 'acquiredDetails'))\r\n              })\r\n              \r\n            }\r\n        })\r\n    })\r\n    return response\r\n  }\r\n  acquiredPassbookLogs(acquiredDetails:any){\r\n    let response  = []\r\n    if(acquiredDetails.length>0){\r\n      _.forEach(acquiredDetails,(value:any)=>{\r\n          response.push({\r\n            'header': _.get(value, 'courseName') ? _.get(value, 'courseName') : '',\r\n            'date':  _.get(value,'createdDate'),\r\n            'description': _.get(value, 'additionalParams.description'),\r\n            'keyboardArrowUp':true,\r\n            'level': _.get(value,'competencyLevelId')\r\n          })\r\n      })\r\n    }\r\n   return response\r\n  }\r\n  acauiredChannelColourCode(acquiredDetails:any){\r\n    let response  = [\r\n     {\r\n       'color': '#FFFBB0',\r\n       'displayLevel': 1,\r\n       'selected': false,\r\n     },\r\n     {\r\n       'color': '#FFFBB0',\r\n       'displayLevel': 2,\r\n       'selected': false,\r\n     },\r\n     {\r\n       'color': '#FFFBB0',\r\n       'displayLevel': 3,\r\n       'selected': false,\r\n     },\r\n     {\r\n       'color': '#FFFBB0',\r\n       'displayLevel': 4,\r\n       'selected': false,\r\n     },\r\n     {\r\n       'color': '#FFFBB0',\r\n       'displayLevel': 5,\r\n       'selected': false,\r\n     }\r\n    ]\r\n   \r\n   _.forEach(acquiredDetails,(value:any)=>{\r\n       const channel = _.get(value,'acquiredChannel')\r\n       switch(channel) {\r\n         case 'course':{\r\n           _.forEach(response, (level:any)=>{\r\n             if(level.displayLevel == _.get(value,'competencyLevelId')){\r\n               level.color = '#FFFBB0';\r\n               level.selected = true\r\n             }\r\n           } )\r\n           \r\n           break; \r\n         }\r\n         case 'selfAssessment':{\r\n           _.forEach(response, (level:any)=>{\r\n             if(level.displayLevel == _.get(value,'competencyLevelId')){\r\n               level.color = '#7CB5E6';\r\n               level.selected = true\r\n               \r\n             }\r\n           } )\r\n         \r\n           break; \r\n         }\r\n         case 'admin':{\r\n           _.forEach(response, (level:any)=>{\r\n             if(level.displayLevel == _.get(value,'competencyLevelId')){\r\n               level.color = '#A4DFCA';\r\n               level.selected = true\r\n             }\r\n           } )\r\n           \r\n           break; \r\n         }\r\n         default: { \r\n           _.forEach(response, (level:any)=>{\r\n             if(level.displayLevel == _.get(value,'competencyLevelId')){\r\n               level.color = '#FFFBB0';\r\n               level.selected = false;\r\n             }\r\n           } )\r\n           \r\n           break; \r\n         }\r\n       }\r\n   })\r\n   return response\r\n }\r\n}\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { DataService } from '@aastrika/comptency/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { urlConfig  } from '@aastrika/comptency/core';\r\n/**\r\n * RequiredCompetencyService to extend Data Service \r\n *\r\n * @author Mansur Shaik <mansur.shaik@tarento.com>\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RequiredCompetencyService extends DataService {\r\n\r\n  constructor(http:HttpClient) {\r\n    super(http)\r\n   }\r\n\r\n  /**\r\n   * for making getall required competency api calls\r\n   * \r\n   */\r\n\r\n   public getRequiredCompetencyById(reqBody:any){\r\n    const httpOptions: any = {\r\n      url: urlConfig.getEntityById(3),\r\n      data: reqBody\r\n    };\r\n    console.log('reqBody',httpOptions)\r\n    return this.post(httpOptions)\r\n  }\r\n  \r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { RequestUtil } from '../../services/request-util';\r\nimport { RequiredCompetencyService } from '../../services/required-competency.service';\r\n\r\n@Component({\r\n  selector: 'lib-required-comptency-card',\r\n  templateUrl: './required-comptency-card.component.html',\r\n  styleUrls: ['./required-comptency-card.component.scss']\r\n})\r\nexport class RequiredComptencyCardComponent implements OnInit, OnDestroy {\r\n\r\n  competencyData = [\r\n    {\r\n      title: 'Procurement and Distribution of HCM',\r\n      description: 'Manages procurement and store raw materials for HCMs as per the pre-decided menu Supervises the preparation and distribution of HCM by Anganwadi Helper (AWH)',\r\n      requiredLevel: 'level 4'\r\n    },\r\n    {\r\n      title: 'Store management and planning and coordination of THR and Dry ration',\r\n      description: 'Mobilizes children and conducts ECCE activities as per the yearly activity calendar and the ECCE manual ',\r\n      requiredLevel: 'level 4'\r\n    },\r\n    {\r\n      title: 'Procurement and Distribution of HCM',\r\n      description: 'Manages procurement and store raw materials for HCMs as per the pre-decided menu Supervises the preparation and distribution of HCM by Anganwadi Helper (AWH)',\r\n      requiredLevel: 'level 4'\r\n    },\r\n    {\r\n      title: 'Early Childhood Care Education',\r\n      description: 'Mobilizes children and conducts ECCE activities as per the yearly activity calendar and the ECCE manual ',\r\n      requiredLevel: 'level 4'\r\n    },\r\n    {\r\n      title: 'Procurement and Distribution of HCM',\r\n      description: 'Manages procurement and store raw materials for HCMs as per the pre-decided menu Supervises the preparation and distribution of HCM by Anganwadi Helper (AWH)',\r\n      requiredLevel: 'level 4'\r\n    },\r\n    {\r\n      title: 'Early Childhood Care Education',\r\n      description: 'Mobilizes children and conducts ECCE activities as per the yearly activity calendar and the ECCE manual ',\r\n      requiredLevel: 'level 4'\r\n    },\r\n  ]\r\n\r\n  panelOpenState: Boolean = true\r\n  customCollapsedHeight = '100px'\r\n  customExpandedHeight = '100px'\r\n  private unsubscribe: Subscription;\r\n  requestUtil: any\r\n  loading = false\r\n\r\n  constructor(\r\n    private requiredCompetencyService: RequiredCompetencyService\r\n  ) { \r\n    this.requestUtil = new RequestUtil()\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.loading = true\r\n    this.unsubscribe = this.getRequiredByPostion().pipe(mergeMap((res:any)=>{\r\n      const formatedResponse =  this.requestUtil.formatedActivitityById(res)\r\n      return of(formatedResponse)\r\n    })).subscribe((res: any) => {\r\n      console.log(res)\r\n    })\r\n  }\r\n\r\n  private getRequiredByPostion() {\r\n    const reqBody = {\r\n      filter: {\r\n        \"isDetail\": true\r\n      }\r\n    };\r\n    return this.requiredCompetencyService.getRequiredCompetencyById(reqBody)\r\n  }\r\n\r\n  logs = [\r\n    {\r\n      index: 1,\r\n      header: 'Understands HCM guidelines',\r\n    },\r\n    {\r\n      index: 2,\r\n      header: 'Lists raw material required',\r\n    },\r\n    {\r\n      index: 3,\r\n      header: 'Plans for storage',\r\n    },\r\n    {\r\n      index: 4,\r\n      header: 'Motivates the AWH and children on optimal hygiene and handwashing practices',\r\n    },\r\n    {\r\n      index: 5,\r\n      header: 'Course-Name Completion',\r\n    },\r\n    \r\n  ]\r\n  \r\n  ngOnDestroy() {\r\n    this.unsubscribe.unsubscribe()\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DataService, urlConfig } from '@aastrika/comptency/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { forkJoin, Observable } from 'rxjs';\r\n\r\n/**\r\n * GainedService to extend Data Service \r\n *\r\n * @author Vishali Sakar <vishali.sakar@tarento.com>\r\n */\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GainedService extends DataService {\r\n\r\n  constructor(http:HttpClient) {\r\n    super(http)\r\n  }\r\n\r\n  /**\r\n   * for making getall Gained api calls\r\n   * \r\n   */\r\n\r\n   public fetchUserPassbook(reqBody:any){\r\n    \r\n    const httpOptions: any = {\r\n      url: urlConfig.getUserPassbook(),\r\n      data: reqBody\r\n    };\r\n    return this.post(httpOptions)\r\n  }\r\n\r\n  \r\n  public fetchAllEntity(reqBody:any){\r\n    \r\n    const httpOptions: any = {\r\n      url: urlConfig.getAllEntity(),\r\n      data: reqBody\r\n    };\r\n    return this.post(httpOptions)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { pipe } from 'rxjs';\r\nimport { forkJoin } from 'rxjs';\r\nimport { GainedService } from '../../services/gained.service';\r\nimport { RequestUtil } from '../../services/request-util';\r\nimport * as _ from 'lodash-es';\r\n@Component({\r\n  selector: 'lib-gained-comptency-card',\r\n  templateUrl: './gained-comptency-card.component.html',\r\n  styleUrls: ['./gained-comptency-card.component.scss']\r\n})\r\nexport class GainedComptencyCardComponent implements OnInit {\r\n\r\n  requestUtil: any\r\n  loading = false\r\n  panelOpenState: Boolean = false;\r\n  gainedproficencyData:any\r\n  constructor(\r\n    public gainedService: GainedService\r\n\r\n  ) {\r\n    this.requestUtil = new RequestUtil()\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loading = true\r\n    const allEntity = this.getAllEntity()\r\n    const userPassbook = this.getAllUserPassbook()\r\n    forkJoin([allEntity,userPassbook]).subscribe((res)=>{\r\n      const response = this.requestUtil.formatedGainedCompetency(res[0].result.response, res[1].result.content)\r\n      this.gainedproficencyData = response\r\n      this.loading = false\r\n    })\r\n  }\r\n \r\n  private getAllUserPassbook() {\r\n    const reqBody = {\r\n      \"request\": {\r\n        \"typeName\": \"competency\"\r\n      }\r\n    };\r\n    return this.gainedService.fetchUserPassbook(reqBody)\r\n  }\r\n\r\n\r\n  private getAllEntity() {\r\n    const reqBody = {\r\n      \"search\": {\r\n        \"type\": \"Competency\"\r\n      }\r\n    };\r\n    return  this.gainedService.fetchAllEntity(reqBody)\r\n  }\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Location } from '@angular/common'\r\n\r\n@Component({\r\n  selector: 'lib-competency-dashboard',\r\n  templateUrl: './competency-dashboard.component.html',\r\n  styleUrls: ['./competency-dashboard.component.scss']\r\n})\r\nexport class CompetencyDashboardComponent implements OnInit {\r\n  @Output() stateChange: EventEmitter<any> = new EventEmitter();\r\n  tabIndex = 0;\r\n  constructor(private location: Location) {\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  navigateBack() {\r\n    this.location.back()\r\n  }\r\n  changeTab(event:any){\r\n    this.tabIndex = event.index;\r\n  }\r\n  startSelfAssessment() {\r\n    this.stateChange.emit({'navigation':true})\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DataService } from '@aastrika/comptency/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { urlConfig  } from '@aastrika/comptency/core';\r\n/**\r\n * ActiveSummaryService to extend Data Service \r\n *\r\n * @author Aman Kumar Sharma <amankumar.sharma@tarento.com>\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ActiveSummaryService extends DataService {\r\n\r\n  constructor(http:HttpClient) {\r\n    super(http)\r\n  }\r\n\r\n   /**\r\n   * for making getall activity api calls\r\n   * \r\n   */\r\n    public getActivityById(reqBody:any){\r\n      // console.log('calling getActivityById>>')\r\n      const httpOptions: any = {\r\n        url: urlConfig.getEntityById(reqBody.id),\r\n        data: reqBody\r\n      };\r\n      // console.log('reqBody',httpOptions)\r\n      return this.post(httpOptions)\r\n    }\r\n}\r\n","import { Component, OnInit,OnDestroy } from '@angular/core';\r\nimport { RequestUtil } from '../../services/request-util';\r\nimport { ActiveSummaryService } from '../../services/active-summary.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { forkJoin, of, Subscription } from 'rxjs';\r\nimport * as _ from 'lodash-es';\r\nimport { ConfigService } from '@aastrika/comptency/entry-module';\r\n@Component({\r\n  selector: 'lib-active-summary',\r\n  templateUrl: './active-summary.component.html',\r\n  styleUrls: ['./active-summary.component.scss']\r\n})\r\nexport class ActiveSummaryComponent implements OnInit {\r\n  /**\r\n * Core Module  \r\n *\r\n * @author Aman Kumar Sharma <amankumar.sharma@tarento.com>\r\n */\r\n  panelOpenState: Boolean = true\r\n  requestUtil: any\r\n  private unsubscribe: Subscription;\r\n  roleactivitySummaries:any\r\n  activitySummaries:any\r\n  loading = false\r\n  acordianLoading = false\r\n  profileData:any\r\n  constructor(public activeSummaryService: ActiveSummaryService, public configService: ConfigService) {\r\n    this.requestUtil = new RequestUtil()\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n   this.loading = true\r\n   this.unsubscribe = this.getActivityByRole().pipe(mergeMap((res:any)=>{\r\n      const formatedResponse =  this.requestUtil.formatedActivitityByPostion(res)\r\n      return of(formatedResponse)\r\n    })).subscribe((res: any) => {\r\n      this.loading = false\r\n      this.roleactivitySummaries = res\r\n    })\r\n    \r\n    this.profileData = JSON.parse(this.configService.getConfig())!.profileData[0].designation\r\n    \r\n  }\r\n\r\n  private getActivityByRole() {\r\n    const reqBody = {\r\n      filter: {\r\n        \"isDetail\": true\r\n      },\r\n      id: this.profileData === 'AWW' ? 95 : 1\r\n    };\r\n    return this.activeSummaryService.getActivityById(reqBody)\r\n  }\r\n\r\n  public getActivityByRoleId(id:any){\r\n    this.panelOpenState = true\r\n    this.acordianLoading = true\r\n    const index = _.findIndex(this.roleactivitySummaries, {'id': id})\r\n    this.roleactivitySummaries[index]['activities'] = []\r\n    this.getEntityById(id).pipe(mergeMap((res)=>{\r\n      const respone = this.requestUtil.formatedActivitityByRoleId(res)\r\n      this.roleactivitySummaries[index]['activities'] = respone\r\n      const cidArr = _.map(this.roleactivitySummaries[index]['activities'], 'cid')\r\n      let calls = [];\r\n      _.forEach(cidArr,(value:any)=>{\r\n        calls.push(this.getEntityById(value))\r\n      })\r\n      this.acordianLoading = false\r\n      return forkJoin(...calls)\r\n    })).subscribe((res:any)=>{\r\n      \r\n      const response = this.requestUtil.formatedCompetency(res)\r\n      this.roleactivitySummaries[index]['activities'] = _.values( _.merge(_.keyBy(response, 'cid'), \r\n           _.keyBy(this.roleactivitySummaries[index]['activities'], 'cid')))\r\n    })\r\n    \r\n  }\r\n  getEntityById(id:any){\r\n    const reqBody = {\r\n      filter: {\r\n        \"isDetail\": true\r\n      },\r\n      id: id\r\n    };\r\n    return this.activeSummaryService.getActivityById(reqBody)\r\n  }\r\n  ngOnDestroy() {\r\n    this.unsubscribe.unsubscribe()\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {  HttpClientModule } from '@angular/common/http'\r\nimport { RequiredComptencyCardComponent } from './components/required-comptency-card/required-comptency-card.component';\r\nimport { GainedComptencyCardComponent } from './components/gained-comptency-card/gained-comptency-card.component';\r\nimport { CompetencyDashboardComponent } from './components/competency-dashboard/competency-dashboard.component';\r\nimport { ActiveSummaryComponent } from './components/active-summary/active-summary.component';\r\nimport { MatTabsModule, MatIconModule, MatExpansionModule } from '@angular/material';\r\nimport { CoreModule } from '@aastrika/comptency/core';\r\n@NgModule({\r\n  declarations: [\r\n    RequiredComptencyCardComponent, \r\n    GainedComptencyCardComponent, \r\n    CompetencyDashboardComponent, \r\n    ActiveSummaryComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatTabsModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    HttpClientModule,\r\n    CoreModule\r\n  ],\r\n  exports: [RequiredComptencyCardComponent,\r\n    GainedComptencyCardComponent,\r\n    CompetencyDashboardComponent,\r\n    ActiveSummaryComponent\r\n  ]\r\n})\r\nexport class CompetencyModule { }\r\n","/*\r\n * Public API Surface of competency-ui\r\n */\r\n\r\nexport * from  './entry-module/entry-module'\r\nexport * from './self-assessment/self-assessment.module'\r\nexport * from './competency/competency.module'","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ActiveSummaryComponent as ɵj} from './competency/components/active-summary/active-summary.component';\nexport {CompetencyDashboardComponent as ɵi} from './competency/components/competency-dashboard/competency-dashboard.component';\nexport {GainedComptencyCardComponent as ɵg} from './competency/components/gained-comptency-card/gained-comptency-card.component';\nexport {RequiredComptencyCardComponent as ɵe} from './competency/components/required-comptency-card/required-comptency-card.component';\nexport {ActiveSummaryService as ɵk} from './competency/services/active-summary.service';\nexport {GainedService as ɵh} from './competency/services/gained.service';\nexport {RequiredCompetencyService as ɵf} from './competency/services/required-competency.service';\nexport {CompetencyEntryComponent as ɵb} from './entry-module/components/competency-entry/competency-entry.component';\nexport {SlefAssessmentEntryComponent as ɵa} from './entry-module/components/slef-assessment-entry/slef-assessment-entry.component';\nexport {SelfAssessmentCardComponent as ɵc} from './self-assessment/components/self-assessment-card/self-assessment-card.component';\nexport {SelfAssessmentComponent as ɵd} from './self-assessment/components/self-assessment/self-assessment.component';"],"names":["tslib_1.__decorate","_.isEmpty","_.get","_.reduce","_.forEach","tslib_1.__extends","_.findIndex","_.map","_.values","_.merge","_.keyBy"],"mappings":"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"}